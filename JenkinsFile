pipeline {
  agent any
  
  environment {
        DOCKERHUB_REPO = 'palak8/flask-app'
        DOCKERHUB_CREDENTIALS_ID = 'docker-cred'
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        sh 'echo "Jenkins file to build and push image to docker hub and Update manifest file."'
        // git branch: 'main', url: 'https://github.com/palak2000/devops_fe_be_project_manifest_update', credentialsId: 'Docker_pass'
      }
    }
    
    //stage('Static Code Analysis') {
     // environment {
       // SONAR_URL = "http://34.201.116.83:9000"
      //}
      //steps {
        // credentialsId: 'sonarqube' -> sonarqube token added in jenkins
        //withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          //sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        //}
      //}
    //}
    
  stage('Build Docker Image') {
      environment {      
        // DOCKERFILE_LOCATION = "devops_frontend_backend_project/Dockerfile"
        // Credentials(docker-cred) -> docker hub cresentials
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            // Build the Docker image
            def app = docker.build("${env.DOCKERHUB_REPO}:${env.BUILD_ID}")
            sh 'echo "Build is completed, noe push the image to docker hub."'
        }
      }
    }
  stage('Push Docker Image') {
            steps {
                script {
                    echo "Pushing Docker image..."
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS_ID}") {
                        sh "docker tag ${DOCKERHUB_REPO}:${env.BUILD_ID} ${DOCKERHUB_REPO}:latest"
                        sh "docker push ${DOCKERHUB_REPO}:${env.BUILD_ID}"
                        sh "docker push ${DOCKERHUB_REPO}:latest"
                    }
                }
            }
        }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "devops_frontend_backend_project"
            GIT_USER_NAME = "palak2000"
        }
        steps {
            // credentialsId: 'github' -> github token added in jenkins
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "palak2000.j@gmail.com"
                    git config user.name "Palak Jain"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    echo "Checking if deployment.yaml exists"
                    pwd
                    ls -l
                    ls -l app_manifest/deployment.yaml
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" app_manifest/deployment.yaml
                    git add devops_frontend_backend_project/app_manifest/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
